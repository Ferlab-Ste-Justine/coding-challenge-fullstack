{"ast":null,"code":"import _classCallCheck from \"/home/xpack/Desktop/chu-assignment/client/clientapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/xpack/Desktop/chu-assignment/client/clientapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/xpack/Desktop/chu-assignment/client/clientapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/xpack/Desktop/chu-assignment/client/clientapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/xpack/Desktop/chu-assignment/client/clientapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/xpack/Desktop/chu-assignment/client/clientapp/src/components/Register.js\";\nimport * as React from 'react';\nimport { Formik, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Button, Container } from 'react-bootstrap';\nimport './styles/Register.css';\nimport * as axios from 'axios';\n\nvar Register =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Register, _React$Component);\n\n  function Register() {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Register).call(this));\n\n    _this.validate = function () {\n      return Yup.object().shape({\n        username: Yup.string().required('required'),\n        email: Yup.string().email(\"enter a valide email\").required(\"required\"),\n        password: Yup.string().min(6, \"password needs to be at least 6 charachters\").required('required'),\n        passConfirmation: Yup.string().min(6).required(\"required\")\n      });\n    };\n\n    _this.handleSubmit = function (values) {\n      console.log(values);\n\n      if (Object.keys(values.errors).length > 0) {\n        alert(\"errors in the form\");\n      } else {\n        axios.post(\"admin/signup\", {\n          \"user\": {\n            \"username\": _this.state.username,\n            \"email\": _this.state.email,\n            \"password\": _this.state.password,\n            \"passwordConfirmation\": _this.state.passConfirmation\n          }\n        }).then(function (response) {\n          if (response.status === 200) {\n            var res = JSON.stringify(response);\n            localStorage.setItem(\"username\", res.username);\n            localStorage.setItem(\"userEmail\", res.userEmail);\n            localStorage.setItem(\"token\", res.token);\n          }\n        }).catch(function (error) {\n          console.log(error);\n          alert(\"an error ocured \");\n        });\n      }\n    };\n\n    _this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      passConfirmation: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        id: \"register-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Formik, {\n        initialValues: this.state,\n        validationSchema: this.validate(),\n        onSubmit: function onSubmit(values, actions) {\n          _this2.handleSubmit(values);\n        },\n        render: function render(values) {\n          return React.createElement(Container, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"form-register__holder\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, React.createElement(\"h2\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, \"Register\")), React.createElement(Form, {\n            onSubmit: function onSubmit(e) {\n              e.preventDefault();\n\n              _this2.handleSubmit(values);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }, React.createElement(Form.Group, {\n            controlId: \"formBasicEmail\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }, React.createElement(Form.Label, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }, \"Username\"), React.createElement(Field, {\n            name: \"username\",\n            render: function render(_ref) {\n              var field = _ref.field;\n              return React.createElement(Form.Control, Object.assign({}, field, {\n                type: \"text\",\n                placeholder: \"username\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 95\n                },\n                __self: this\n              }));\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }), React.createElement(ErrorMessage, {\n            name: \"username\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          }, function (message) {\n            return React.createElement(\"div\", {\n              style: {\n                color: \"red\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 100\n              },\n              __self: this\n            }, message);\n          })), React.createElement(Form.Group, {\n            controlId: \"formBasicEmail\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            },\n            __self: this\n          }, React.createElement(Form.Label, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          }, \"Email address\"), React.createElement(Field, {\n            name: \"email\",\n            render: function render(_ref2) {\n              var field = _ref2.field;\n              return React.createElement(Form.Control, Object.assign({}, field, {\n                type: \"email\",\n                placeholder: \"email\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 109\n                },\n                __self: this\n              }));\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106\n            },\n            __self: this\n          }), React.createElement(ErrorMessage, {\n            name: \"email\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112\n            },\n            __self: this\n          }, function (message) {\n            return React.createElement(\"div\", {\n              style: {\n                color: \"red\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 114\n              },\n              __self: this\n            }, message);\n          })), React.createElement(Form.Group, {\n            controlId: \"formBasicEmail\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120\n            },\n            __self: this\n          }, React.createElement(Form.Label, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          }, \"password\"), React.createElement(Field, {\n            name: \"password\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          }, function (_ref3) {\n            var field = _ref3.field;\n            return React.createElement(Form.Control, Object.assign({}, field, {\n              type: \"password\",\n              placeholder: \"password\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 124\n              },\n              __self: this\n            }));\n          }), React.createElement(ErrorMessage, {\n            name: \"password\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }, function (message) {\n            return React.createElement(\"div\", {\n              style: {\n                color: \"red\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 129\n              },\n              __self: this\n            }, message);\n          })), React.createElement(Form.Group, {\n            controlId: \"formBasicEmail\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133\n            },\n            __self: this\n          }, React.createElement(Form.Label, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          }, \"password confirmation\"), React.createElement(Field, {\n            name: \"passConfirmation\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          }, function (_ref4) {\n            var field = _ref4.field;\n            return React.createElement(Form.Control, Object.assign({}, field, {\n              type: \"password\",\n              placeholder: \"confirm password\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 137\n              },\n              __self: this\n            }));\n          }), React.createElement(ErrorMessage, {\n            name: \"passConfirmation\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140\n            },\n            __self: this\n          }, function (message) {\n            return React.createElement(\"div\", {\n              style: {\n                color: \"red\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 142\n              },\n              __self: this\n            }, message);\n          })), React.createElement(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146\n            },\n            __self: this\n          }, \"Register\"))));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Register;\n}(React.Component);\n\nexport default Register;","map":{"version":3,"sources":["/home/xpack/Desktop/chu-assignment/client/clientapp/src/components/Register.js"],"names":["React","Formik","Field","ErrorMessage","Yup","Form","Button","Container","axios","Register","validate","object","shape","username","string","required","email","password","min","passConfirmation","handleSubmit","values","console","log","Object","keys","errors","length","alert","post","state","then","response","status","res","JSON","stringify","localStorage","setItem","userEmail","token","catch","error","actions","e","preventDefault","field","message","color","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Formik, Field,ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport {Form,Button,Container} from 'react-bootstrap';\nimport './styles/Register.css';\nimport * as axios from 'axios';\n\nclass Register extends React.Component{\n    constructor(){\n        super();\n        this.state={\n            username:\"\",\n            email:\"\",\n            password:\"\",\n            passConfirmation:\"\"\n        }\n\n    }\n\n    validate=()=>{\n        return Yup.object().shape({\n            username:Yup\n                    .string()\n                    .required('required'),\n            email :Yup\n                    .string()\n                    .email(\"enter a valide email\")\n                    .required(\"required\"),\n            password:Yup \n                    .string()\n                    .min(6,\"password needs to be at least 6 charachters\")\n                    .required('required'),\n            passConfirmation:Yup\n                            .string()\n                            .min(6)\n                            .required(\"required\")\n        });\n    }\n    \n    handleSubmit=(values)=>{\n        console.log(values);\n        if(Object.keys(values.errors).length>0){\n            alert(\"errors in the form\");\n        }else{\n            axios\n            .post(\"admin/signup\",{\n                \"user\":{\n                    \"username\":this.state.username,\n                    \"email\":this.state.email,\n                    \"password\":this.state.password,\n                    \"passwordConfirmation\":this.state.passConfirmation\n                }\n            })\n            .then(response=>{\n                if(response.status===200){\n                    const res=JSON.stringify(response);\n                    localStorage.setItem(\"username\",res.username);\n                    localStorage.setItem(\"userEmail\",res.userEmail);\n                    localStorage.setItem(\"token\",res.token);\n                }\n            })\n            .catch(error=>{\n                console.log(error);\n                alert(\"an error ocured \");\n            })\n        }\n    \n\n    }\n\n    render(){\n        return (\n            <div id='register-form'>\n                \n             <Formik\n                initialValues={this.state}\n                validationSchema={this.validate()}\n                onSubmit={(values, actions) => {\n                    \n                  this.handleSubmit(values);\n                }}\n                render={(values) => (\n                    <Container>\n                    <div className=\"form-register__holder\">\n                    <div className=\"title\"><h2>Register</h2></div>\n                    <Form onSubmit={(e)=>{\n                        e.preventDefault()\n                        this.handleSubmit(values);\n                        }}>\n                    <Form.Group controlId=\"formBasicEmail\">\n                      <Form.Label>Username</Form.Label>\n                      <Field\n                        name=\"username\"\n                        render={({field}) => (\n                        <Form.Control {...field} type=\"text\" placeholder=\"username\" />\n                     )}\n                    />\n                      <ErrorMessage name=\"username\" >\n                      { (message)=>{\n                           return <div style={{color:\"red\"}}>{message}</div>\n                      }}\n                    </ErrorMessage> \n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicEmail\">\n                      <Form.Label>Email address</Form.Label>\n                      <Field\n                        name=\"email\"\n                        render={({field}) => (\n                        <Form.Control {...field} type=\"email\" placeholder=\"email\" />\n                    )}\n                    />\n                      <ErrorMessage name=\"email\" >\n                      { (message)=>{\n                           return <div style={{color:\"red\"}}>{message}</div>\n                      }}\n                     \n                      </ErrorMessage>\n\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicEmail\">\n                      <Form.Label>password</Form.Label>\n                      <Field name=\"password\" >\n                        {({field})=>{\n                            return <Form.Control {...field} type=\"password\" placeholder=\"password\" />\n                        }}\n                      </Field>\n                      <ErrorMessage name=\"password\" >\n                      { (message)=>{\n                           return <div style={{color:\"red\"}}>{message}</div>\n                      }}\n                    </ErrorMessage> \n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicEmail\">\n                      <Form.Label>password confirmation</Form.Label>\n                      <Field name=\"passConfirmation\" >\n                        {({field})=>{\n                            return <Form.Control {...field} type=\"password\" placeholder=\"confirm password\" />\n                        }}\n                      </Field>\n                      <ErrorMessage name=\"passConfirmation\" >\n                      { (message)=>{\n                           return <div style={{color:\"red\"}}>{message}</div>\n                      }}\n                    </ErrorMessage> \n                    </Form.Group>\n                    <Button variant=\"primary\" type=\"submit\">\n                      Register\n                    </Button>\n                  </Form>\n                  </div>\n                  </Container>\n                )}\n                />\n            </div>\n\n        );\n    }\n\n\n}\n\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}