{"ast":null,"code":"import _objectSpread from \"/home/xpack/Desktop/chu-assignment/client/clientapp/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/xpack/Desktop/chu-assignment/client/clientapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/xpack/Desktop/chu-assignment/client/clientapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/xpack/Desktop/chu-assignment/client/clientapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/xpack/Desktop/chu-assignment/client/clientapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/xpack/Desktop/chu-assignment/client/clientapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/xpack/Desktop/chu-assignment/client/clientapp/src/components/HomePage.js\";\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport './styles/homepage.css';\nimport { Button, Container } from 'react-bootstrap';\nimport websocket from 'socket.io-client';\nimport * as axios from 'axios';\nimport PostItem from './PostItem';\nimport EditModal from './Modals/EditModal';\n\nvar HomePage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(HomePage, _React$Component);\n\n  function HomePage() {\n    var _this;\n\n    _classCallCheck(this, HomePage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HomePage).call(this));\n\n    _this.handlChnage = function (e) {\n      _this.setState({\n        messageContent: e.target.value\n      }); // broadcasting the message the  current user is typing \n\n\n      _this.state.socket.emit(\"typing\", {\n        username: localStorage.username,\n        message: e.target.value\n      });\n    };\n\n    _this.logout = function () {\n      // clearing all the data in the localstorage\n      localStorage.clear();\n    };\n\n    _this.getPosts = function () {\n      axios.get(\"/post/getAll\").then(function (response) {\n        var posts = response.data.posts;\n\n        _this.setState({\n          posts: posts\n        });\n      }).catch(function (error) {\n        alert(error.message);\n      });\n    };\n\n    _this.displayPost = function (post) {\n      var posts = _this.state.posts;\n      posts.push(post); // we need to remove the message that was being typed \n      // from the list since the user has finished typing \n      // and sent the mesage\n\n      var index = _this.state.typings.findIndex(function (msg) {\n        return msg.username === post.username;\n      });\n\n      var typings = _this.state.typings;\n      typings.splice(index, 1);\n\n      _this.setState({\n        typings: typings\n      }, function () {\n        _this.setState({\n          posts: posts\n        });\n      });\n    };\n\n    _this.addPost = function (post) {\n      var body = {\n        content: _this.state.messageContent\n      };\n      var instance = axios.create({\n        headers: {\n          post: {\n            token: localStorage.getItem(\"token\")\n          }\n        }\n      });\n      instance.post(\"/post/create\", body).then(function (response) {\n        console.log(\"response is \", response);\n      }).catch(function (error) {\n        alert(error.message);\n      });\n    };\n\n    _this.openModal = function (messsageId, content) {\n      _this.setState({\n        editedPost: {\n          id: messsageId,\n          content: content\n        },\n        isEditing: true\n      });\n    };\n\n    _this.changePostContent = function (e) {\n      _this.setState({\n        editedPost: _objectSpread({}, _this.state.editedPost, {\n          content: e.target.value\n        })\n      });\n    };\n\n    _this.UpdatePost = function (e) {\n      e.preventDefault();\n      var instance = axios.create({\n        headers: {\n          put: {\n            token: localStorage.getItem(\"token\")\n          }\n        }\n      });\n      instance.put(\"/post/edit/\".concat(_this.state.editedPost.id), {\n        content: _this.state.editedPost.content\n      }).then(function (response) {\n        _this.setState({\n          isEditing: false\n        }); //updating the edited message on the screen \n\n\n        var editedPost = _this.state.posts.find(function (post) {\n          return post.id === _this.state.editedPost.id;\n        });\n\n        editedPost.content = _this.state.editedPost.content;\n        console.log(response);\n      }).catch(function (error) {\n        alert(error.message);\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        isEditing: false\n      });\n    };\n\n    _this.state = {\n      socket: {},\n      messageContent: \"\",\n      posts: [],\n      typings: [],\n      isEditing: false,\n      editedPost: {\n        id: -1,\n        content: ''\n      }\n    };\n    return _this;\n  }\n\n  _createClass(HomePage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var socket = websocket(\"http://localhost:8080\");\n      this.setState({\n        socket: socket\n      });\n      socket.on(\"create\", function (data) {\n        if (data.action === \"create\") {\n          _this2.displayPost(data.post);\n        }\n      });\n      socket.on(\"typing\", function (data) {\n        var typings = _this2.state.typings;\n        var index = typings.findIndex(function (user) {\n          return user.username === data.username;\n        });\n\n        if (index >= 0) {\n          if (!(data.message === \"\")) {\n            typings[index] = data;\n          } else {\n            // the user removed what they were typing \n            // so we remove that user from the list\n            typings.splice(index, 1);\n          }\n        } else {\n          typings.push(data);\n        }\n\n        _this2.setState({\n          typings: typings\n        });\n      });\n      this.getPosts();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        id: \"homepage-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"top-bar__menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"homepage-wall\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"The Wall\")), React.createElement(\"div\", {\n        className: \"login-form__container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, !localStorage.username ? React.createElement(Link, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClick,\n        variant: \"secondary\",\n        className: \"homepage-button__slbtn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Login/SignUp\")) : React.createElement(Link, {\n        to: \"/\",\n        onClick: this.logout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClick,\n        variant: \"secondary\",\n        className: \"homepage-button__slbtn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Logout\")))), React.createElement(\"div\", {\n        className: \"posts-container__wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"post-list__item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, this.state.posts.map(function (post) {\n        return React.createElement(PostItem, {\n          username: post.username,\n          content: post.content,\n          id: post.id,\n          editMessage: _this3.openModal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        });\n      }), this.state.typings.length > 0 && this.state.typings.map(function (t) {\n        return React.createElement(PostItem, {\n          username: t.username,\n          content: t.message,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        });\n      }))), localStorage.username ? React.createElement(\"div\", {\n        className: \"chat-box__area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        className: \"mesage-field__input\",\n        value: this.state.messageContent,\n        placeholder: \"enter a message\",\n        onChange: this.handlChnage,\n        draggable: \"false\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"send-message__button\",\n        onClick: this.addPost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"send\")) : null, this.state.isEditing ? React.createElement(EditModal, {\n        editedPost: this.state.editedPost,\n        handleChange: this.changePostContent,\n        show: this.state.isEditing,\n        handleClose: this.handleClose,\n        update: this.UpdatePost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }) : null));\n    }\n  }]);\n\n  return HomePage;\n}(React.Component);\n\nexport default HomePage;","map":{"version":3,"sources":["/home/xpack/Desktop/chu-assignment/client/clientapp/src/components/HomePage.js"],"names":["React","Link","Button","Container","websocket","axios","PostItem","EditModal","HomePage","handlChnage","e","setState","messageContent","target","value","state","socket","emit","username","localStorage","message","logout","clear","getPosts","get","then","response","posts","data","catch","error","alert","displayPost","post","push","index","typings","findIndex","msg","splice","addPost","body","content","instance","create","headers","token","getItem","console","log","openModal","messsageId","editedPost","id","isEditing","changePostContent","UpdatePost","preventDefault","put","find","handleClose","on","action","user","handleClick","map","length","t","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport './styles/homepage.css';\nimport {Button,Container} from 'react-bootstrap';\nimport websocket from 'socket.io-client';\nimport * as axios from 'axios';\nimport PostItem from './PostItem';\nimport EditModal from './Modals/EditModal';\n\nclass HomePage extends React.Component{\n\n\n    constructor(){\n        super();\n        this.state={\n            socket:{},\n            messageContent:\"\",\n            posts:[],\n            typings:[],\n            isEditing:false,\n            editedPost:{\n                id:-1,\n                content:''\n            }\n        }\n    }\n\n    handlChnage=(e)=>{\n        this.setState({messageContent:e.target.value});\n        // broadcasting the message the  current user is typing \n        this.state.socket.emit(\"typing\",{\n            username:localStorage.username,\n            message:e.target.value\n        })\n    }\n    logout=()=>{\n        // clearing all the data in the localstorage\n        localStorage.clear();\n    }\n    componentDidMount(){\n       const socket = websocket(\"http://localhost:8080\");\n       this.setState({socket})\n        socket.on(\"create\",(data)=>{\n        if(data.action===\"create\"){\n            this.displayPost(data.post);\n        }\n    });\n    socket.on(\"typing\",data=>{\n        const typings = this.state.typings;\n        const index = typings.findIndex(user=>user.username===data.username);\n        if(index>=0){\n            if(!(data.message===\"\")){\n                typings[index]=data;\n            }else{\n                // the user removed what they were typing \n                // so we remove that user from the list\n                typings.splice(index,1);\n            }\n        }else{\n            typings.push(data);\n        }\n        this.setState({typings});\n       \n    });\n       this.getPosts();\n    }\n\n    getPosts=()=>{\n       axios\n        .get(\"/post/getAll\")\n        .then(response=>{\n            const posts = response.data.posts;\n            this.setState({\n                posts\n            })\n        })\n        .catch(error=>{\n            alert(error.message);\n        })\n    }\n\n    displayPost=(post)=>{\n        const posts = this.state.posts;\n        posts.push(post);\n        // we need to remove the message that was being typed \n        // from the list since the user has finished typing \n        // and sent the mesage\n        const index = this.state.typings.findIndex(msg=>msg.username===post.username);\n        const typings = this.state.typings;\n        typings.splice(index,1);\n        this.setState({typings},()=>{\n            this.setState({\n                posts\n            })\n        })\n       \n    }\n\n    addPost=(post)=>{\n        const body = {\n            content:this.state.messageContent\n        }\n         let instance=axios.create({\n            headers: {\n              post: {     \n                token:localStorage.getItem(\"token\")\n              }\n            }\n          });\n\n        instance.post(\"/post/create\",body)\n       .then(response=>{\n         console.log(\"response is \",response);\n       })\n       .catch(error=>{\n           alert(error.message);\n       })\n    }\n\n    openModal=(messsageId,content)=>{\n       this.setState({\n            editedPost:{\n                id:messsageId,\n                content\n            },\n            isEditing:true\n        });\n    }\n\n    changePostContent=(e)=>{\n        this.setState({\n            editedPost:{\n            ...this.state.editedPost,\n            content:e.target.value\n        }\n    });\n     \n    }\n\n    UpdatePost=(e)=>{\n        e.preventDefault();\n        let instance=axios.create({\n            headers: {\n              put: {     \n                token:localStorage.getItem(\"token\")\n              }\n            }\n          });\n\n        instance\n        .put(`/post/edit/${this.state.editedPost.id}`,{\n            content:this.state.editedPost.content\n        })\n        .then(response=>{\n            this.setState({\n                isEditing:false\n            });\n            //updating the edited message on the screen \n            const editedPost = this.state.posts.find(post=>post.id===this.state.editedPost.id);\n            editedPost.content=this.state.editedPost.content;\n            console.log(response);\n        })  \n        .catch(error=>{\n            alert(error.message);\n        })  \n    }\n    handleClose=()=>{\n        this.setState({isEditing:false});\n    }\n    render(){\n        return (\n            <div id=\"homepage-wrapper\">\n            <Container>\n            <header className=\"top-bar__menu\">\n                    \n                    <div className=\"homepage-wall\">\n                        <h3>The Wall</h3>\n                    </div>\n                    <div className=\"login-form__container\">\n                    {!localStorage.username?\n                        <Link to={\"/login\"}>\n                        <Button \n                            onClick={this.handleClick} \n                            variant=\"secondary\"\n                            className=\"homepage-button__slbtn\"\n                            >\n                            Login/SignUp\n                            </Button>\n                        </Link>\n                        :\n                        <Link to={\"/\"} onClick={this.logout}>\n                            <Button \n                                onClick={this.handleClick} \n                                variant=\"secondary\"\n                                className=\"homepage-button__slbtn\"\n                                >\n                                Logout\n                                </Button>\n                        </Link>\n                    }\n                        \n                    </div>\n                   \n                </header>\n\n                <div className=\"posts-container__wrapper\">\n                <ul className=\"post-list__item\">\n\n                    { this.state.posts.map(post=>{\n                        return<PostItem \n                                username={post.username} \n                                content={post.content}\n                                id={post.id}\n                                editMessage={this.openModal}\n                                 />\n                    })}\n\n                    {this.state.typings.length>0 && this.state.typings.map(t=>{\n                        return <PostItem \n                                username={t.username} \n                                content={t.message}\n                             />\n                    })}\n\n\n\n                </ul>\n                </div>\n                    \n                {localStorage.username\n                ?\n                     <div className=\"chat-box__area\">\n                     <textarea\n                     className=\"mesage-field__input\"\n                     value={this.state.messageContent}\n                     placeholder=\"enter a message\"\n                     onChange={this.handlChnage}\n                     draggable=\"false\"\n                     >\n                     </textarea>\n                 <div className=\"send-message__button\"\n                      onClick={this.addPost}\n                 >  \n                     send\n                 </div>\n                 </div>\n                 :null \n                }\n                {this.state.isEditing?\n                    <EditModal \n                    editedPost={this.state.editedPost}\n                    handleChange={this.changePostContent}\n                    show={this.state.isEditing}\n                    handleClose={this.handleClose}\n                    update={this.UpdatePost}\n                    />\n                    :null \n                }\n               \n                </Container>\n            </div>\n\n        );\n    }\n\n\n}\n\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}